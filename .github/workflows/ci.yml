name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dev deps
        run: |
          pip install -r requirements-dev.txt
        # If you didn't create requirements-dev.txt, replace the step above with:
        # run: |
        #   pip install pytest==8.3.3 pytest-django==4.8.0 coverage==7.6.1 \
        #               black==24.8.0 flake8==7.1.1 isort==5.13.2

      - name: Lint
        run: |
          black --check .
          isort --check-only .
          flake8 .

      - name: Test
        env:
          DJANGO_SETTINGS_MODULE: core.settings
        run: |
          coverage run -m pytest -q
          coverage xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  docker-build:
    name: Build & Push Docker (GHCR)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image name (lowercase)
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          REPO_LC=$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=ghcr.io/${OWNER_LC}/${REPO_LC}:latest" >> $GITHUB_ENV
          echo "IMAGE_SHA=ghcr.io/${OWNER_LC}/${REPO_LC}:${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "Using image: $IMAGE and $IMAGE_SHA"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}
            ${{ env.IMAGE_SHA }}